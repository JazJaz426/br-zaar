import { expect, test } from "@playwright/test";

//bug: back end does not seem to update load so need to manually load bad file to unload previous successful file

/**
 * This was generated by default by `npm init playwright@latest` and it demonstrates common test patterns.
 */
test.beforeEach(async ({ page }) => {
  await page.goto("http://localhost:8000/");
});

test.afterEach(async ({ page }) => {
  await page.reload();
});

/**
 * View after successful load
 */
test("view after successful load", async ({ page }) => {
  await page
    .getByPlaceholder("Enter command here!")
    .fill("load ./data/server-data/city-town-income.csv");
  await page.getByLabel("Submit").click();
  await expect(
    page.getByText(
      "File ./data/server-data/city-town-income.csv loaded Successfully"
    )
  ).toBeVisible();
  await page.getByLabel("Command input").fill("view");
  await page.getByLabel("Submit").click();
  let table = await page.getByRole("table");
  await expect(table).toContainText("City/Town");
  await expect(table).toContainText("Burrillville");
});

/**
 * View after empty load
 */
test("view after empty load", async ({ page }) => {
  await expect(page.getByPlaceholder("Enter command here!")).toBeVisible;
  await page.getByLabel("Command input").fill("load");
  // await page.getByLabel("Login").click();
  //   await page.getByPlaceholder("Enter command here!").fill("load");
  await page.getByLabel("Submit").click();
  await page.getByLabel("Command input").fill("view");
  await page.getByLabel("Submit").click();
  await expect(page.getByText("No file loaded")).toBeVisible();
});

/**
 * View before loading any file
 */
test("view before loading file", async ({ page }) => {
  await expect(page.getByPlaceholder("Enter command here!")).toBeVisible;
  await page.getByLabel("Command input").fill("view");
  await page.getByLabel("Submit").click();
  await expect(page.getByText("No file loaded")).toBeVisible();
});

/**
 * View after failed load
 */
test("view after failed load", async ({ page }) => {
  await expect(page.getByPlaceholder("Enter command here!")).toBeVisible;
  await page.getByLabel("Command input").fill("load income_by_race.csv");
  await page.getByLabel("Submit").click();
  await expect(
    page.getByText(
      "Error happens when parsingjava.io.FileNotFoundException: income_by_race.csv (No such file or directory)"
    )
  ).toBeVisible();
  await page.getByLabel("Command input").fill("view");
  await page.getByLabel("Submit").click();
  await expect(page.getByText("No file loaded")).toBeVisible();
  await page.getByLabel("Command input").fill("load hello");
  await page.getByLabel("Submit").click();
});

/**
 * View after successful load then failed load
 */
test("view after successful load then failed load", async ({ page }) => {
  await page.reload();
  await page
    .getByPlaceholder("Enter command here!")
    .fill("load ./data/census/postsecondary_education.csv header");
  //.fill("load ./data/server-data/city-town-income.csv header");
  await page.getByLabel("Submit").click();
  await expect(
    page.getByText(
      "File ./data/census/postsecondary_education.csv loaded Successfully"
      //"File ./data/server-data/city-town-income.csv loaded Successfully"
    )
  ).toBeVisible();
  await page.getByLabel("Command input").fill("view");
  await page.getByLabel("Submit").click();
  let table_header = await page
    .getByLabel("table body")
    .getByLabel("table header")
    .getByText("IPEDS Race");

  await expect(table_header).toContainText("IPEDS Race");

  await page.getByPlaceholder("Enter command here!").fill("load 1");
  await page.getByLabel("Submit").click();
  await page.getByLabel("Command input").fill("view");
  await page.getByLabel("Submit").click();

  await expect(page.getByText("No file loaded")).toBeVisible();
});

/**
 * View after two successful loads
 */
test("view after two successful loads", async ({ page }) => {
  await page.getByLabel("Command input").fill("load hello");
  await page.getByLabel("Submit").click();
  await page
    .getByPlaceholder("Enter command here!")
    .fill("load ./data/census/income_by_race.csv");
  await page.getByLabel("Submit").click();
  await expect(
    page.getByText("File ./data/census/income_by_race.csv loaded Successfully")
  ).toBeVisible();
  await page.getByLabel("Command input").fill("view");
  await page.getByLabel("Submit").click();
  let table1 = await page.getByRole("table");
  await expect(table1).toContainText("ID Race");
  await expect(table1).toContainText("Geography");
  await page
    .getByPlaceholder("Enter command here!")
    .fill("load ./data/census/dol_ri_earnings_disparity.csv header");
  await page.getByLabel("Submit").click();
  await expect(
    page.getByText(
      "File ./data/census/dol_ri_earnings_disparity.csv loaded Successfully"
    )
  ).toBeVisible();

  await page.getByLabel("Command input").fill("view");
  await page.getByLabel("Submit").click();
  let table_header = await page
    .getByLabel("table body")
    .getByLabel("table header")
    .getByText("Average Weekly Earnings");
  //source: https://playwright.dev/docs/api/class-locator
  await expect(table_header).toContainText("Average Weekly Earnings");
  await page.getByLabel("Command input").fill("load hello");
  await page.getByLabel("Submit").click();
});
